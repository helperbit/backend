include ../../admin/views/includes/head.jade

style.
	.info-box-small {
		min-height: 60px !important;
		cursor: pointer;
	}
	.box-metric-disabled {
		background: #ccc;
		font-size:50%;
	}
	.box-metric-disabled > .info-box-icon {
		background-color: #777 !important;
	}
	.info-box-small > .info-box-icon {
		height: 60px !important;
		width: 60px !important;
		line-height: 60px !important;
		font-size: 35px !important;
	}
	.info-box-small > .info-box-content {
		margin-left: 60px !important;
	}
	.info-box-small > .info-box-content > .info-box-text {
		font-size: 13px !important;
	}
	.btn-box-tool {
		color: #666 !important;
	}

body.hold-transition.skin-blue.sidebar-mini
	.wrapper
		include ../../admin/views/includes/header.jade
		include ../../admin/views/includes/aside.jade

		// Content Wrapper. Contains page content
		.content-wrapper
				// Content Header (Page header)
				section.content-header
					h1 AdminHB | Metrics
					ol.breadcrumb
						li
							a(href='#')
								i.fa.fa-dashboard
								|  Home
						li.active Metrics
				// Main content
				section.content
					.row
						.col-md-12
							.box.box-info
								.box-header.with-border
									h3.box-title Chart
									.box-tools.pull-right
										a.btn.btn-box-tool#exportCSV(type='button',target="_blank",download="export.csv")
											i.fa.fa-cloud-download
											span &nbsp;Export CSV
										a.btn.btn-box-tool(href="/admin/metrics/manual", type='button')
											i.fa.fa-edit
											span &nbsp;Edit manual metrics
										a.btn.btn-box-tool#unselectAll(type='button')
											i.fa.fa-times
											span &nbsp;Unselect all
								// /.box-header
								.box-body
									.row
										.col-md-2.col-sm-6.col-xs-12
											.form-group
												label(for="inputStart") Start Date
												input.form-control(id="inputStart", type="date")
										.col-md-2.col-sm-6.col-xs-12
											.form-group
												label(for="inputEnd") End Date
												input.form-control(id="inputEnd", type="date")
										.col-md-2.col-sm-6.col-xs-12
											.form-group
												label(for="inputTimeFrame") Time Frame
												select.form-control(id="inputTimeFrame")
													option(value="day") Day
													// option(value="week") Week
													option(value="month", selected="") Month
													option(value="year") Year
										.col-md-2.col-sm-6.col-xs-12
											.form-group
												label(for="inputVisualization") Visualization
												select.form-control(id="inputVisualization")
													option(value="bar") Bar
													option(value="line", selected="") Line
													option(value="bubble") Bubble
													option(value="area") Stacked Area
										.col-md-2.col-sm-6.col-xs-12
											.form-group
												label(for="inputDataMod") Data Modification
												select.form-control(id="inputDataMod")
													option(value="linear") Linear
													option(value="cumulative", selected="") Cumul.
													option(value="percentage") %
													option(value="percentagebetween") Cumul. % Between
													option(value="cumulativepercentage") Cumul. %
										.col-md-12
											.chart-container(style="max-width: 100%; max-height: 340px;")
												canvas#chart(height="340")

					// Presets
					.box.box-info.box-info(style="border-left: 1px solid #d2d6de; border-right: 1px solid #d2d6de")
						.box-header.with-border
							h3.box-title Presets
							.box-tools.pull-right
								button.btn.btn-box-tool(type='button', data-widget='collapse')
									i.fa.fa-minus
						.box-body(style="background-color: #ecf0f5; padding-bottom: 0px")
							.row
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-user-types")
										span.info-box-icon(style="background-color: #034c81")
											i.fa(class="fa fa-user",style="color: #fff")
										.info-box-content
											span.info-box-text User Types
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-user-verification")
										span.info-box-icon(style="background-color: #534c81")
											i.fa(class="fa fa-shield",style="color: #fff")
										.info-box-content
											span.info-box-text User Verification
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-user-referral")
										span.info-box-icon(style="background-color: #03ac81")
											i.fa(class="fa fa-trophy",style="color: #fff")
										.info-box-content
											span.info-box-text User Referral
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-badges")
										span.info-box-icon(style="background-color: #883213")
											i.fa(class="fa fa-gamepad",style="color: #fff")
										.info-box-content
											span.info-box-text Badges
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-male-female-ratio")
										span.info-box-icon(style="background-color: #ff92ff")
											i.fa(class="fa fa-female",style="color: #fff")
										.info-box-content
											span.info-box-text Male/Female ratio
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-donation-volume")
										span.info-box-icon(style="background-color: #a72a11")
											i.fa(class="fa fa-bitcoin",style="color: #fff")
										.info-box-content
											span.info-box-text Donation type volume
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-donation-count")
										span.info-box-icon(style="background-color: #c15700")
											i.fa(class="fa fa-bitcoin",style="color: #fff")
										.info-box-content
											span.info-box-text Donation type count
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-donation-user-count")
										span.info-box-icon(style="background-color: #f82e00")
											i.fa(class="fa fa-user",style="color: #fff")
										.info-box-content
											span.info-box-text Donation user count
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-donation-user-volume")
										span.info-box-icon(style="background-color: #f80e40")
											i.fa(class="fa fa-user",style="color: #fff")
										.info-box-content
											span.info-box-text Donation user volume
											span.info-box-number 
								.col-md-3.col-sm-6.col-xs-12
									.info-box.info-box-small.box-metric-preset(id="preset-analytics")
										span.info-box-icon(style="background-color: #dd4b39")
											i.fa(class="fa fa-google",style="color: #fff")
										.info-box-content
											span.info-box-text Analytics
											span.info-box-number 


					// Metrics
					each c in categories
						.box.box-info.box-success(style="border-left: 1px solid #d2d6de; border-right: 1px solid #d2d6de")
							.box-header.with-border
								h3.box-title= c
								.box-tools.pull-right
									button.btn.btn-box-tool(type='button', data-widget='collapse')
										i.fa.fa-minus
							.box-body(style="background-color: #ecf0f5; padding-bottom: 0px")
								.row
									each m in metrics
										if m.ui.category == c
											.col-md-2.col-sm-6.col-xs-12
												.info-box.info-box-small.box-metric(id=m.code, data-toggle="tooltip", title=m.ui.description)
													span.info-box-icon(style="background-color: "+m.ui.color)
														i.fa(class=m.ui.icon,style="color: #fff")
													.info-box-content
														span.info-box-text= m.ui.name
														span.info-box-number= m.total



script.
	function shineColor (col) {
		return col + 'aa';
	}

	var releases = [{
		x: moment("2016-12-30").toDate(),
		y: 0,
		label: 'Legambiente Study Case',
	}, {
		x: moment("2017-09-25").toDate(),
		y: 0,
		label: 'FIAT Donations TRT',
	}, {
		x: moment("2017-11-30").toDate(),
		y: 0,
		label: 'Public Release',
	}, {
		x: moment("2018-05-09").toDate(),
		y: 0,
		label: 'Flypme Integration',
	}, {
		x: moment("2018-11-13").toDate(),
		y: 0,
		label: 'Fundraising Campaign',
	}, {
		x: moment("2019-2-29").toDate(),
		y: 0,
		label: 'Ambassador & Badge',
	}, {
		x: moment("2019-8-3").toDate(),
		y: 0,
		label: 'FE Typescript Migration',
	}, {
		x: moment("2020-1-30").toDate(),
		y: 0,
		label: 'FE Angualar9 migration release',
	}, {
		x: moment("2020-3-12").toDate(),
		y: 0,
		label: 'Covid CRI Project',
	}];

	var presets = {
		"preset-male-female-ratio": {
			"metrics": ['user-gender-male', 'user-gender-female'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-user-types": {
			"metrics": ['user-registration-organization', 'user-registration-single', 'user-registration-municipality', 'user-registration-company'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-user-referral": {
			"metrics": ['user-registration-referral', 'user-registration-no-referral'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-user-verification": {
			"metrics": ['user-verified', 'user-not-verified'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-donation-volume": {
			"metrics": ['donation-volume', 'donation-fiat-volume', 'donation-alt-volume'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-donation-count": {
			"metrics": ['donation-count', 'donation-fiat-count', 'donation-alt-count'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-donation-user-volume": {
			"metrics": ['donation-single-volume', 'donation-project-volume'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-donation-user-count": {
			"metrics": ['donation-single-count', 'donation-project-count'],
			"datamod": "percentagebetween",
			"timeframe": "month",
			"visualization": "area"
		},
		"preset-analytics": {
			"metrics": ['analytics-user', 'analytics-new-user', 'analytics-session', 'analytics-pageview'],
			"timeframe": "month",
			"datamod": "cumulative",
			"visualization": "line"
		},
		"preset-badges": {
			"metrics": [ "badge-count-supporter",
				"badge-count-trust", "badge-count-donor-bronze", "badge-count-donor-silver", 
				"badge-count-donor-gold", "badge-count-fundraiser-bronze", "badge-count-fundraiser-silver", 
				"badge-count-fundraiser-gold", "badge-count-ambassador-bronze", "badge-count-ambassador-silver", 
				"badge-count-ambassador-gold"],
			"timeframe": "month",
			"datamod": "linear",
			"visualization": "line"
		}
	};


	$(document).ready(function() {
		$('#inputEnd').val(moment().format('YYYY-MM-DD'));
		$('#inputStart').val('2017-11-01');
		$('[data-toggle="tooltip"]').tooltip();

		var ctx = null;
		var chart = null;

		function createChart (ds) {
			try {
				chart.destroy();
			} catch(err) {

			}

			if ($('#inputDataMod option:selected').val() == 'cumulative' || $('#inputDataMod option:selected').val() == 'cumulativepercentage' || $('#inputDataMod option:selected').val() == 'percentagebetween') {
				ds = ds.map(function(d) {
					var nd = [];
					for (var i = 0; i < d.data.length; i++) {
						if (i != 0) {
							nd.push ({ x: d.data[i].x, y: nd[i-1].y + d.data[i].y});
						} else {
							nd.push(d.data[i]);
						}
					}
					d.data = nd;
					return d;
				});
			} 
			
			if ($('#inputDataMod option:selected').val() == 'percentage' || $('#inputDataMod option:selected').val() == 'cumulativepercentage') {
				ds = ds.map(function(d) {
					var total = 0;
					var nd = [];

					for (var i = 0; i < d.data.length; i++) {
						total += d.data[i].y;
					}

					for (var i = 0; i < d.data.length; i++) {
						nd.push ({ x: d.data[i].x, y: Math.floor((d.data[i].y*100/total) * 10000) / 10000});						
					}
					d.data = nd;
					return d;
				});
			} else if ($('#inputDataMod option:selected').val() == 'percentagebetween') {
				var totalDaily = {};
				ds.forEach(function(d) {
					for (var i = 0; i < d.data.length; i++) {
						let t = moment(d.data[i].x).startOf($('#inputTimeFrame option:selected').val()).format()
						if (! (t in totalDaily))
							totalDaily[t] = 0;
						totalDaily[t] += d.data[i].y;
					}
				});

				ds = ds.map(function(d) {
					var nd = [];

					for (var i = 0; i < d.data.length; i++) {
						let t = moment(d.data[i].x).startOf($('#inputTimeFrame option:selected').val()).format()
						if (totalDaily[t] > 0)
							nd.push ({ x: t, y: Math.floor((d.data[i].y*100/totalDaily[t]) * 10000) / 10000 });
						else
							nd.push ({ x: t, y: 0 });						
					}
					d.data = nd;
					return d;
				});
			}
			
			ctx = document.getElementById("chart");

			ds.push ({ 
				label: 'Releases', 
				data: releases.filter(r => {
					return moment(r.x) > moment($('#inputStart').val()) && moment(r.x) < moment($('#inputEnd').val())
				}), 
				pointRadius: 4,
				pointBackgroundColor: '#991122',
				backgroundColor: '#991122'
			});

			var chartConf = {
					type: $('#inputVisualization option:selected').val(),
					data: { datasets: ds.map (function(d) { d.fill = false; return d; }) },
					options: { 
						elements: {
							point: {
								radius: 1
							},
							line: {
								tension: 0
							}
						},

						maintainAspectRatio: false,
						responsive: true,
						scales: {
							yAxes: [{
								ticks: {
									beginAtZero:true
								}
							}],
							xAxes: [{
								offset: true,
								type: 'time',
								time: {
									unit: $('#inputTimeFrame option:selected').val()
								}
							}]
						},
						tooltips: {
							callbacks: {
								label: function(tooltipItem, data) {
									var value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
									var label = data.datasets[tooltipItem.datasetIndex].label;
									if ('label' in value)
										return label + ': ' + value.label;
									else
										return label + ': ' + value.y;
								}
							}
						}
					}
			};

			if ($('#inputVisualization option:selected').val () == 'area') {
				chartConf.type = 'line';
				chartConf.data.datasets = chartConf.data.datasets.map (function(d) { d.fill = true; return d; });
				chartConf.options.scales.yAxes = [{
					stacked: true,
					ticks: {
						beginAtZero:true
					}
				}]
			} 
			
			chart = new Chart(ctx, chartConf);				
		}


		var metricsInfo = !{JSON.stringify(metrics)};
		var metricsEnabled = {};
		var chartData = {};

		function updateCharts () {
			var datasets = [];
			var metrics = [];
			metricsInfo.forEach(function(m) {
				if (metricsEnabled[m.code] && !(m.code in chartData))
					metrics.push (m.code);
				else if (metricsEnabled[m.code] && m.code in chartData) {
					datasets.push ({
						label: m.ui.name,
						data: chartData[m.code].map (function(d) { 
							return {
								x: d.time,
								y: d.value
							}; 
						}),
						borderColor: m.ui.color,
						backgroundColor: shineColor (m.ui.color),
						pointBackgroundColor: m.ui.color,
						borderWidth: 2,
						fill: false
					});
				}
			});

			if (metrics.length > 0) {
				$.ajax ({
					method: 'POST',
					url: '/admin/metrics/charts/' + $('#inputTimeFrame option:selected').val() + '/' + $('#inputStart').val() + '/' + $('#inputEnd').val(), 
					data: JSON.stringify({ 'metrics': metrics }),
					contentType: "application/json",
					success: function (data) {
						data.charts.forEach (function(c){
							chartData[c.code] = c.chart;
							datasets.push ({
								label: c.ui.name,
								data: chartData[c.code].map (function(d) { 
									return {
										x: d.time,
										y: d.value
									}; 
								}),
								borderWidth: 2,
								borderColor: c.ui.color,
								backgroundColor: shineColor (c.ui.color),
								pointBackgroundColor: c.ui.color,
								fill: false
							});
						});
						createChart(datasets);
					}
				});
			} else {
				createChart(datasets);
			}
		};

		metricsInfo.forEach (function(m) {
			metricsEnabled[m.code] = m.ui.enabled;
			if (!m.ui.enabled)
				$("#" + m.code).toggleClass ('box-metric-disabled');
		});

		$('#unselectAll').click (function() {
			metricsInfo.forEach (function(m) {
				if (metricsEnabled[m.code])
					$("#" + m.code).toggleClass ('box-metric-disabled');
				metricsEnabled[m.code] = false;
			});
			updateCharts();
		});

		$('.box-metric-preset').click(function () {
			var id = this.id;
			var preset = presets[id];

			metricsInfo.forEach (function(m) {
				if (metricsEnabled[m.code])
					$("#" + m.code).toggleClass ('box-metric-disabled');
				metricsEnabled[m.code] = false;
			});
			preset.metrics.forEach (m => {
				metricsEnabled[m] = true;
				$("#" + m).toggleClass ('box-metric-disabled');
			});

			$('#inputVisualization').val(preset.visualization);
			$('#inputDataMod').val(preset.datamod);
			$('#inputTimeFrame').val(preset.timeframe);

			updateCharts();
		});

		$('.box-metric').click(function () {
			var id = this.id;
			$(this).toggleClass ('box-metric-disabled');
			metricsEnabled[id] = !metricsEnabled[id];

			updateCharts();
		});

		$('#inputStart').change (function () {
			chartData = {};
			updateCharts();
		});

		$('#inputEnd').change (function () {
			chartData = {};
			updateCharts();
		});

		$('#inputTimeFrame').change (function () {
			chartData = {};
			updateCharts();
		});

		$('#inputVisualization').change (function () {
			updateCharts();
		});

		$('#inputDataMod').change (function () {
			updateCharts();
		});


		$('#exportCSV').click(function() {
			var data = "";
			var metricsEnabledArray = Object.keys(metricsEnabled).filter(function(m) { return metricsEnabled[m]; });
			var unit = $('#inputTimeFrame option:selected').val();
			data += 'time,' + metricsEnabledArray.join(',') + '\n';

			var timedata = {};
			metricsEnabledArray.forEach(function(m) {
				var cdata = chartData[m];
				cdata.forEach (function(dr) {
					var tt = null;
					var t = new Date(dr.time);

					function fillWithZero (f) {
						if (String(f).length == 1)
							return '0' + String(f);
						return String(f);
					}

					switch(unit) {
						case 'year':
							tt = t.getFullYear();
							break;
						case 'month':
							tt = t.getFullYear() + '-' + fillWithZero(t.getMonth() + 1);
							break;
						case 'week':
							tt = t.getFullYear() + '-' + fillWithZero(t.getMonth() + 1) + '-' + fillWithZero(t.getDate());
							break;
						case 'day':
							tt = t.getFullYear() + '-' + fillWithZero(t.getMonth() + 1) + '-' + fillWithZero(t.getDate());
							break;
					}

					if (! (tt in timedata))
						timedata[tt] = {}

					timedata[tt][m] = dr.value;
				});
			});

			Object.keys(timedata).sort().forEach(function(r) {
				var row = timedata[r];
				var rowdata = [r];

				metricsEnabledArray.forEach(function(m) {
					if (m in row)
						rowdata.push(row[m]);
					else
						rowdata.push(0.0);
				});

				data += rowdata.join(',') + '\n';
			});


			console.log('Downloading CSV...');
			this.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(data);
		});

		updateCharts();
	});


